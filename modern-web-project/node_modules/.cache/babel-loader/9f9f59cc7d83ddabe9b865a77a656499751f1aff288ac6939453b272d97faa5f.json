{"ast":null,"code":"import React from'react';import'../styles/ScorecardTable.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScorecardTable=_ref=>{let{holes=[],par99Applied}=_ref;const rowTitles=[\"Hole\",\"HCP\",\"Par\",\"Adj Par\"];// Generate an array of hole numbers from 1 to 18\nconst holeNumbers=Array.from({length:18},(_,i)=>i+1);// Calculate the sum of holes 1-9 and 10-18\nconst sumHoles1to9=holes.slice(0,9).reduce((sum,hole)=>sum+hole.par,0);const sumHoles10to18=holes.slice(9,18).reduce((sum,hole)=>sum+hole.par,0);const totalPar=sumHoles1to9+sumHoles10to18;// Calculate the adjusted par values\nconst adjustedParValues=holes.map(hole=>{return par99Applied?hole.hcp>=10?hole.par+1:hole.par+2:'';});const sumAdjustedHoles1to9=adjustedParValues.slice(0,9).reduce((sum,adjPar)=>sum+(adjPar||0),0);const sumAdjustedHoles10to18=adjustedParValues.slice(9,18).reduce((sum,adjPar)=>sum+(adjPar||0),0);const totalAdjustedPar=sumAdjustedHoles1to9+sumAdjustedHoles10to18;return/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:rowTitles[0]}),holeNumbers.map(holeNumber=>/*#__PURE__*/_jsx(\"th\",{children:holeNumber},holeNumber)),/*#__PURE__*/_jsx(\"th\",{children:\"Out\"}),/*#__PURE__*/_jsx(\"th\",{children:\"In\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:rowTitles[1]}),holes.map(hole=>/*#__PURE__*/_jsx(\"td\",{children:hole.hcp},`hcp-${hole.hole_number}`)),/*#__PURE__*/_jsx(\"td\",{children:holes.length>0?sumHoles1to9:''}),/*#__PURE__*/_jsx(\"td\",{children:holes.length>9?sumHoles10to18:''}),/*#__PURE__*/_jsx(\"td\",{children:holes.length>0?totalPar:''})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:rowTitles[2]}),holes.map(hole=>/*#__PURE__*/_jsx(\"td\",{children:hole.par},`par-${hole.hole_number}`)),/*#__PURE__*/_jsx(\"td\",{children:holes.length>0?sumHoles1to9:''}),/*#__PURE__*/_jsx(\"td\",{children:holes.length>9?sumHoles10to18:''}),/*#__PURE__*/_jsx(\"td\",{children:holes.length>0?totalPar:''})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:rowTitles[3]}),adjustedParValues.map((adjPar,index)=>/*#__PURE__*/_jsx(\"td\",{children:adjPar},`adjpar-${holes[index].hole_number}`)),/*#__PURE__*/_jsx(\"td\",{children:par99Applied&&holes.length>0?sumAdjustedHoles1to9:''}),/*#__PURE__*/_jsx(\"td\",{children:par99Applied&&holes.length>9?sumAdjustedHoles10to18:''}),/*#__PURE__*/_jsx(\"td\",{children:par99Applied&&holes.length>0?totalAdjustedPar:''})]})]})]});};export default ScorecardTable;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ScorecardTable","_ref","holes","par99Applied","rowTitles","holeNumbers","Array","from","length","_","i","sumHoles1to9","slice","reduce","sum","hole","par","sumHoles10to18","totalPar","adjustedParValues","map","hcp","sumAdjustedHoles1to9","adjPar","sumAdjustedHoles10to18","totalAdjustedPar","children","holeNumber","hole_number","index"],"sources":["C:/Users/hazab/Desktop/VSCode Projects/GolfParAdjuster/modern-web-project/src/components/ScorecardTable.js"],"sourcesContent":["import React from 'react';\nimport '../styles/ScorecardTable.css';\n\nconst ScorecardTable = ({ holes = [], par99Applied }) => {\n    const rowTitles = [\"Hole\", \"HCP\", \"Par\", \"Adj Par\"];\n\n    // Generate an array of hole numbers from 1 to 18\n    const holeNumbers = Array.from({ length: 18 }, (_, i) => i + 1);\n\n    // Calculate the sum of holes 1-9 and 10-18\n    const sumHoles1to9 = holes.slice(0, 9).reduce((sum, hole) => sum + hole.par, 0);\n    const sumHoles10to18 = holes.slice(9, 18).reduce((sum, hole) => sum + hole.par, 0);\n    const totalPar = sumHoles1to9 + sumHoles10to18;\n\n    // Calculate the adjusted par values\n    const adjustedParValues = holes.map(hole => {\n        return par99Applied\n            ? (hole.hcp >= 10 ? hole.par + 1 : hole.par + 2)\n            : '';\n    });\n\n    const sumAdjustedHoles1to9 = adjustedParValues.slice(0, 9).reduce((sum, adjPar) => sum + (adjPar || 0), 0);\n    const sumAdjustedHoles10to18 = adjustedParValues.slice(9, 18).reduce((sum, adjPar) => sum + (adjPar || 0), 0);\n    const totalAdjustedPar = sumAdjustedHoles1to9 + sumAdjustedHoles10to18;\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>{rowTitles[0]}</th>\n                    {holeNumbers.map(holeNumber => (\n                        <th key={holeNumber}>{holeNumber}</th>\n                    ))}\n                    <th>Out</th>\n                    <th>In</th>\n                    <th>Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{rowTitles[1]}</td>\n                    {holes.map(hole => (\n                        <td key={`hcp-${hole.hole_number}`}>{hole.hcp}</td>\n                    ))}\n                    <td>{holes.length > 0 ? sumHoles1to9 : ''}</td>\n                    <td>{holes.length > 9 ? sumHoles10to18 : ''}</td>\n                    <td>{holes.length > 0 ? totalPar : ''}</td>\n                </tr>\n                <tr>\n                    <td>{rowTitles[2]}</td>\n                    {holes.map(hole => (\n                        <td key={`par-${hole.hole_number}`}>{hole.par}</td>\n                    ))}\n                    <td>{holes.length > 0 ? sumHoles1to9 : ''}</td>\n                    <td>{holes.length > 9 ? sumHoles10to18 : ''}</td>\n                    <td>{holes.length > 0 ? totalPar : ''}</td>\n                </tr>\n                <tr>\n                    <td>{rowTitles[3]}</td>\n                    {adjustedParValues.map((adjPar, index) => (\n                        <td key={`adjpar-${holes[index].hole_number}`}>{adjPar}</td>\n                    ))}\n                    <td>{par99Applied && holes.length > 0 ? sumAdjustedHoles1to9 : ''}</td>\n                    <td>{par99Applied && holes.length > 9 ? sumAdjustedHoles10to18 : ''}</td>\n                    <td>{par99Applied && holes.length > 0 ? totalAdjustedPar : ''}</td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n\nexport default ScorecardTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}